package{	import flash.display.Sprite;	import flash.events.TimerEvent;	import flash.system.System;	import flash.text.TextField;	import flash.utils.Timer;		import mx.core.UIComponent;

	public class MemoryMonitor extends UIComponent	{		private var memory_tf:TextField;		private var myTimer:Timer;		private var currMemory:Number						private var graph:Sprite;		private var history:Array = [];				public function MemoryMonitor():void		{			graph = new Sprite();			addChild(graph);						memory_tf = new TextField();			memory_tf.border=true			memory_tf.width=100			memory_tf.height=20			currMemory = System.totalMemory;						myTimer = new Timer(0,0);						myTimer.addEventListener(TimerEvent.TIMER, timerHandler)						addChild(memory_tf)						start(100);											}				public function start(interval:Number)		{			myTimer.delay=interval			myTimer.start()		}		public function stop()		{			myTimer.stop()		}				public function get currentMemory():Number		{			return currMemory;		}				private function timerHandler(evt:TimerEvent):void		{			currMemory = System.totalMemory/1024/1024;						memory_tf.text = currMemory.toString() + " MB"						}			}}