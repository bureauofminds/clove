
<Bridge xmlns:GingerSkinLoadManager="com.bridge.module.LoadManagerModule">                                                           
    
	<Variable:set name="gingerSkinRoot" value="{host+'/skins/Ginger/'}" />
    
                                                
    <!-- Load in the required font for this skin -->
	<external:asset  source="{'WhitneyHTFSemiBold.swf'}" type="font" />
	<external:asset  source="{gingerSkinRoot+'style.xml'}" type="script" /> 
	
	<change:property target="{GingerSkinLoadManager}" pauseMethod="pauseAll" />

	<Label instance:id="preloader" style="fontSize:20;fontFace:WhitneyHTFSemiBold;fontColor:#B6B6B6;" verticalCenter="0" text="loading..." horizontalCenter="0"  />   

     <observer:listen to="{GingerSkinLoadManager}" for="progress"> 
		
		<change:property target="{preloader}" text="loading skin: {Math.round(GingerSkinLoadManager.bytesLoaded/GingerSkinLoadManager.bytesTotal*100)}%" />
	 </observer:listen>
	
	<!-- scan the entire document for items to load -->	
	
	<GingerSkinLoadManager:execute  /> 
	
	
	<change:property target="{preloader}" visible="{false}" />		
	 
    <Container name="controls" styleName=".controls" bottom="0" instance:id="mediaControls" alignment="horizontal">
	    
		<Spacer name="spacer1" width="10" height="1" />
		
	   	<Container name="buttonHolder" instance:id="buttonHolder" verticalCenter="0" buttonMode="true">    	              
			
			<Image name="playButton" instance:id="playButton" source="{#GingerSkinLoadManager:media(gingerSkinRoot+'ui/play.png')}" visible="{true}" />  					
            <Image name="pauseButton" instance:id="pauseButton" source="{#GingerSkinLoadManager:media(gingerSkinRoot+'ui/pause.png')}" visible="{false}" />  					
                                                                                              
			<observer:listen to="{playButton}" for="click">     
				<action:script>
					<![CDATA[
						if(complete)
						{
							videoPlayer.seek(0);
						}
						
						videoPlayer.dispatchEvent(new Event("playing"));
						videoPlayer.play();
						
						complete = false;
						
					]]>
				</action:script>
			</observer:listen>                             
			
			<observer:listen to="{pauseButton}" for="click">    
				<Bridge run="{videoPlayer.pause()}" />
			</observer:listen>
			
			<observer:listen to="{videoPlayer}" for="resume">
				<Bridge run="{isPlaying(true)}" />
			</observer:listen>
			
			<observer:listen to="{videoPlayer}" for="pause">
				<Bridge run="{isPlaying(false)}" />
			</observer:listen>		 	
		
			<action:script>
				<![CDATA[
					function isPlaying(value:Boolean)
					{
						playButton.visible  = !value; 
						pauseButton.visible = value;
						                                           
					}
				]]>
			</action:script>
		 </Container> 
		 
		<Spacer name="spacer2" width="9" height="1" />
		<Label name="currentTimeTxt" instance:id="currentTimeTxt" styleName=".currentTime" text="0:00" verticalCenter="0" />   
        <Spacer name="spacer3" width="4" height="1" />
		
		<Container name="seekBackground" instance:id="seekBackground" buttonMode="{true}" styleName=".seekBackground" verticalCenter="0" percentWidth="100" height="3">    		   	
			
			<Container name="buffer" instance:id="buffer" styleName=".buffer">
			    <observer:listen to="{videoPlayer}" for="progress">
						<action:script>
						<![CDATA[						

							buffer.percentWidth = videoPlayer.percentLoaded;

							seekerDragger.bounds = getScrubArea();					                                                          

						]]>
					</action:script>
				</observer:listen> 	
			
			</Container>    			
			
			<Container name="bufferHitArea" instance:id="bufferHitArea" alpha="0" styleName=".bufferHitArea" observer:mouseDown="var videoWasPaused = videoPlayer.paused">
				<observer:listen to="{bufferHitArea}" for="mouseUp">
					<action:script>
						<![CDATA[ 
						
						    
							videoPlayer.seek((100 * seekBackground.mouseX) / (seekBackground.width));  
							
							
							if(!videoWasPaused)
							{
							   videoPlayer.play();
							}
								                                                
						]]>
					</action:script>
				</observer:listen>
				
			</Container>			
			
			<Image name="seekerButton" instance:id="seekerButton" source="{#GingerSkinLoadManager:media(gingerSkinRoot+'ui/slide.png')}" x="-1" verticalCenter="0" />  
			
			<action:script>
				<![CDATA[
					var seekerDragger:Dragger = new Dragger(seekerButton,'dragAll',false,new Rectangle(seekerButton.x,seekerButton.y,seekBackground.width,0));
					seekerDragger.boundToSize = true;
					
					seekerDragger.addEventListener('dragStart',onDragStart);
					seekerDragger.addEventListener('dragging',onSeekDrag);
					seekerDragger.addEventListener('dragStop',onDragStop);
					
					var videoWasPaused:Boolean = true;
					
					function onDragStart(event:Event)
					{  
						videoWasPaused = videoPlayer.paused;
					   
						seekerButton.percentWidth = NaN;
					}					
					
					
					
					function onSeekDrag(event:Event)
					{  
						
						videoPlayer.seek(Math.round((100 * seekerButton.x) / (seekBackground.width - seekerButton.width)));
					}					
					
					function onDragStop(event)
					{   
						if(!videoWasPaused)
						{
							videoPlayer.play();
						}
					}
					
					var startX:Number = seekerButton.x;
					var startY:Number = seekerButton.y;					
					
					function getScrubArea()
					{
						return new Rectangle(startX,startY,buffer.width,0);
					}
				]]>
			</action:script>			
		
 		</Container>
		
		<Spacer width="2" height="1" />
		
		<Label name="totalTime" instance:id="totalTime" text="0:00" verticalCenter="0" styleName=".currentTime" />
		
		<Spacer name="spacer4" width="11" height="1" />
		
	    <Image name="soundButton" instance:id="soundButton" source="{#GingerSkinLoadManager:media(gingerSkinRoot+'ui/sound.png')}" verticalCenter="0" buttonMode="{true}">
			<Bridge run="{var toggleSoundControl:Boolean = true}"/>
			<observer:listen to="{soundButton}" for="mouseUp">
				<action:script>
					<![CDATA[
						
						var tween:Tween;
						
						if(toggleSoundControl)
						{
							tween = new Tween(soundControl,"bottom",soundControl.bottom,30,1000);
							
						}
						else
						{
							tween = new Tween(soundControl,"bottom",soundControl.bottom,0-soundControl.height,1000);
						}
						
						tween.easingFunction = Strong.easeOut;
						
						toggleSoundControl = !toggleSoundControl;
						
						
					]]>
				</action:script>
			</observer:listen>
		</Image>		
		
		<Spacer name="spacer5" width="9" height="1" />
		
		<Image name="fullScreen" instance:id="advanced" source="{#GingerSkinLoadManager:media(gingerSkinRoot+'ui/fullscreen.png')}" verticalCenter="0" buttonMode="true" observer:click="toggleFullScreen();" />
		
		<Spacer name="spacer6"  width="11" height="1" />
		
		<action:script>
			<![CDATA[
				
				function toggleFullScreen()
				{
					
					if(stage.displayState=='fullScreen')
					{
					
						stage.displayState = 'normal';
					}
					else
					{
						stage.displayState='fullScreen';
					}					                                         
					
				}
			]]>
		</action:script>
		
	</Container> 
	
	<Container instance:id="soundControl" styleName=".soundControl" right="30" bottom="-100">
		<Container instance:id="soundControlTrack" styleName=".soundControlTrack" buttonMode="{true}">
			
			<Image instance:id="soundControlBar" source="{#GingerSkinLoadManager:media(gingerSkinRoot+'ui/vertical slide.png')}" y="-2" horizontalCenter="" />			
			
			<action:script>
				<![CDATA[
					var dragger:Dragger = new Dragger(soundControlBar,'dragAll',false,new Rectangle(soundControlBar.x,soundControlBar.y,0,soundControlTrack.height+2));
					
					dragger.boundToSize = true;
					
					dragger.addEventListener('dragging',onDragging);
					
					function onDragging(event:Event)
					{
					
						videoPlayer.volume = 100-(100 * soundControlBar.y) / (soundControlTrack.height-soundControlBar.height);
						
					}
				]]>
			</action:script>
			
		</Container>		
		
	</Container>
	
	<Container instance:id="soundControlMask" styleName=".soundControl" right="28" bottom="30">
		<Bridge run="{soundControl.mask = soundControlMask}" />
	</Container> 
        
	<observer:listen to="{videoPlayer}" for="playing">
		<action:script>
			<![CDATA[                                                                                                                        
				//seekerButton.percentX = videoPlayer.percentDone;
				
				currentTimeTxt.text   = videoPlayer.currentTimeString;
			]]>
		</action:script>
	</observer:listen>
	<observer:listen to="{videoPlayer}" for="loaded">
		<action:script>
			<![CDATA[
				totalTime.text  = videoPlayer.totalTimeString;
			]]>
		</action:script>
	</observer:listen>
</Bridge>