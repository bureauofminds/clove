<Skin xmlns:TALoadManager="com.bridge.module.LoadManagerModule">
   
  <Variable:set name="taSkinRoot" value="{host+'/skins/TrailerAddict/'}" />
   
                                                  
  <external:asset  source="{taSkinRoot+'WhitneyHTFSemiBold.swf'}" type="font"   				  />
  <external:asset  source="{taSkinRoot+'style.xml'}"              type="script" />   
  
  <change:property target="{TALoadManager}" pauseMethod="pauseAll" />
	


  <classDefinition source="flash.text.TextFormat" />    

  <classDefinition name="TextInput" source="flash.text.TextField"> 
	<process passRawChildren="true" childHandler="text" /> 
  </classDefinition>           
  <TALoadManager:execute />   

  
	<action:script>
		<![CDATA[
		   
			
			function mouseIsOut(target) 
			{
				return (root.mouseX < target.x) ||
				       (root.mouseY < target.y) ||
				       (root.mouseX > target.x + target.width) ||
				       (root.mouseY > target.y + target.height)
			}
			   
			
		]]>
	</action:script> 
	<variable:set name="mouseIsIn" value="{true}" />
	
	<create:function id="listenForMouseLeave" node:id="test"> 
		
  	   <observer:listen id="stageML" to="{stage}" for="mouseLeave">       
             
		   <!-- <call:function target="{stageML.destroy}" /> -->
		    <!-- for some reason the event is dispatched a few times after mouse leave -->
		    <observer:remove from="{stage}" event="mouseLeave" />       
			
			<variable:set name="mouseIsIn" value="{false}" />
		
			<observer:listen node:id="someNode" to="{stage}" for="mouseMove">     
				                                      
				<variable:set name="mouseIsIn" value="{true}" />    
				<observer:remove from="{stage}" event="mouseMove" />
				<call:function target="{listenForMouseLeave}" /> 
				<Tween target="{mediaControls}" property="bottom" start="{mediaControls.bottom}" stop="0" duration="300" />
				<Tween target="{showControls}"  property="bottom" start="{showControls.bottom}" stop="-100" duration="300" easingFunction="{Bounce.easeIn}" />
				
			</observer:listen>
			<sleep time="300" />                     
			<condition:check if="{!mouseIsIn}">            
				
				<Tween target="{mediaControls}" property="bottom" start="{mediaControls.bottom}" stop="-100" duration="300" />
				<Tween target="{showControls}" property="bottom" start="{showControls.bottom}" stop="0" duration="300" easingFunction="{Bounce.easeOut}" />
			</condition:check>   
		</observer:listen> 
		                             
	</create:function>
	
	<call:function target="{listenForMouseLeave}" />   

           

	
	<Container styleName=".tacontrols" instance:id="mediaControls" alignment="horizontal">
	    
		<Spacer width="10" height="1" />
	   	<Container instance:id="buttonHolder" verticalCenter="0" buttonMode="true" styleName=".playPauseBackground" alpha=".6" observer:mouseOver="buttonHolder.alpha = 1" observer:mouseOut="buttonHolder.alpha = 0.6">    
		  
            
			
			<Image instance:id="playButton" source="{#TALoadManager:media(taSkinRoot+'ui/play.png')}" visible="{true}" verticalCenter="0" horizontalCenter="0" />  					
            <Image instance:id="pauseButton" source="{#TALoadManager:media(taSkinRoot+'ui/pause.gif')}" visible="{false}" verticalCenter="0" horizontalCenter="0" />  					
                                                                                              
			<observer:listen to="{playButton}" for="click">     
				<Bridge run="{videoPlayer.play()}" />
			</observer:listen>
			
			<observer:listen to="{pauseButton}" for="click">    
				<Bridge run="{videoPlayer.pause()}" />
			</observer:listen>
			
			<observer:listen to="{videoPlayer}" for="resume">
				<Bridge run="{isPlaying(true)}" />
			</observer:listen>
			
			<observer:listen to="{videoPlayer}" for="pause">
				<Bridge run="{isPlaying(false)}" />
				
			</observer:listen>
		 	
		
			<action:script>
				<![CDATA[
					function isPlaying(value:Boolean)
					{
						playButton.visible  = !value; 
						pauseButton.visible = value;
						                                               =
					}
				]]>
			</action:script>
		 </Container>  
		<Spacer width="10" height="1" />

		<Container instance:id="seekBackground" buttonMode="{true}" styleName=".taseekBackground" verticalCenter="0" percentWidth="100">    
		   	
		
			
			<Container instance:id="buffer" styleName=".tabuffer">
			    <observer:listen to="{videoPlayer}" for="progress">
						<action:script>
						<![CDATA[
						

							buffer.percentWidth = videoPlayer.percentLoaded;

							seekerDragger.bounds = getScrubArea();
					


						]]>
					</action:script>
				</observer:listen> 
				
				<observer:listen to="{buffer}" for="mouseUp">
					<action:script>
						<![CDATA[
							videoPlayer.seek((100 * seekBackground.mouseX) / (seekBackground.width));
							videoPlayer.play();
						]]>
					</action:script>
				</observer:listen> 
				
				
			
			</Container>    
			
		    <classDefinition source="flash.filters.GlowFilter" />
			<Container instance:id="seekerButton" styleName=".seekerButton" x="-2" verticalCenter="0" filters="{[new GlowFilter(0)]}" />  
			
			<action:script>
				<![CDATA[
					var seekerDragger:Dragger = new Dragger(seekerButton,'dragAll',false,new Rectangle(seekerButton.x,seekerButton.y,seekBackground.width,0));
					seekerDragger.boundToSize = true;
					
					seekerDragger.addEventListener('dragStart',onDragStart);
					seekerDragger.addEventListener('dragging',onSeekDrag);
					seekerDragger.addEventListener('dragStop',onDragStop);
					
					
					function onDragStart(event:Event)
					{
						seekerButton.percentWidth = NaN;
					}
					
					
					function onSeekDrag(event:Event)
					{
					
						videoPlayer.seek((100 * seekerButton.x) / (seekBackground.width));

					}
					
					
					function onDragStop(event)
					{
						videoPlayer.play();
					}
					
					var startX:Number = seekerButton.x;
					var startY:Number = seekerButton.y;
					
					
					function getScrubArea()
					{
						return new Rectangle(startX,startY,buffer.width,0);
					}
				]]>
			</action:script>
			
		
 		</Container>
		
	     
		<Spacer width="10" height="1" />
		               
		<Label instance:id="currentTime" text="0:00" styleName=".timeText" alpha=".6" verticalCenter="0" />
		<Spacer width="5" height="1" />
		<Image source="{#TALoadManager:media(taSkinRoot+'ui/pipe.gif')}" verticalCenter="0" />
		<Spacer width="5" height="1" />
        <Label instance:id="totalTime" text="0:00" styleName=".timeText" verticalCenter="0" /> 
		<Spacer width="5" height="1" />
		<Image instance:id="soundControl" source="{#TALoadManager:media(taSkinRoot+'ui/sound.png')}" verticalCenter="0"  /> 
		<Spacer width="5" height="1" />
		<Image  instance:id="fullScreen" source="{#TALoadManager:media(taSkinRoot+'ui/fullScreen.gif')}" alpha=".6" verticalCenter="0" buttonMode="true" observer:mouseOver="fullScreen.alpha = 1" observer:mouseOut="fullScreen.alpha = 0.6" observer:click="toggleFullScreen();" />
	   
		
		<action:script>
			<![CDATA[
				
				function toggleFullScreen()
				{
					
					if(stage.displayState=='fullScreen')
					{
					
						stage.displayState = 'normal';
					}
					else
					{
						stage.displayState='fullScreen';
					}
				}
			]]>
		</action:script> 
		 <Spacer width="10" height="1" /> 
		<Image instance:id="embed" source="{#TALoadManager:media(taSkinRoot+'ui/embed.gif')}" alpha=".6" verticalCenter="0" buttonMode="true" observer:mouseOver="embed.alpha = 1" observer:mouseOut="embed.alpha = 0.6" observer:click="toggleEmbedWindow();" />  
		<Spacer width="10" height="1" /> 
	</Container> 
	
	
	<action:script>
		<![CDATA[   
			
			
			var toggleWindow:Boolean = false;
			
			function toggleEmbedWindow()
			{                   
				if(!toggleWindow)
				{
					new Tween(embedMedia,"alpha",embedMedia.alpha,1,400);
					var tw:Tween = new Tween(embedMedia,"verticalCenter",-50,0,400);
					tw.easingFunction = Bounce.easeOut;
				}
				else
				{
					new Tween(embedMedia,"alpha",embedMedia.alpha,0,300);
					var tw:Tween = new Tween(embedMedia,"verticalCenter",0,50,400);
				}  
				
				toggleWindow = !toggleWindow;
			}
		]]>
	</action:script>
	
   <Container instance:id="embedMedia" styleName=".embedMedia" visible="{false}"> 
   		<Container verticalCenter="-15" horizontalCenter="0" alignment="vertical" padding="5">
			<Label styleName=".embedText" text="COPY THIS CODE TO EMBED" /> 
			<TextInput instance:id="test"  height="20" wordWrap="{true}" multiline="{false}" width="200" border="{true}" borderColor="0xFFFFFF" type="input" textColor="0xFFFFFF" embedFonts="{true}" defaultTextFormat="{new TextFormat('WhitneyHTFSemiBold')}"><![CDATA[<object width="450" height="304"><param name="movie" value="http://www.traileraddict.com/emd/8356"></param><param name="allowscriptaccess" value="always"><param name="wmode" value="transparent"></param><param name="allowFullScreen" value="true"></param><embed src="http://www.traileraddict.com/emd/8356" type="application/x-shockwave-flash" allowscriptaccess="always" wmode="transparent" width="450" height="304" allowFullScreen="true"></embed></object>   ]]>
	   		</TextInput>
			<Label styleName=".embedText" text="DIRECT URL" />
			<TextInput instance:id="test"  height="20" wordWrap="{true}" multiline="{false}" width="200" border="{true}" borderColor="0xFFFFFF" type="input" textColor="0xFFFFFF" embedFonts="{true}" defaultTextFormat="{new TextFormat('WhitneyHTFSemiBold')}">http://spicyapp.com</TextInput>                                                    
		</Container>
   </Container> 
	
	<Container instance:id="showControls" styleName=".showControls" horizontalCenter="0" bottom="-100" alignment="vertical" padding="5">
		<Spacer height="3" width="5" />  
		<Image source="{#TALoadManager:media(taSkinRoot+'ui/showControls.png')}" horizontalCenter="0" />
		<Label styleName=".embedText" text="Watchmen: Character Feature - Ozymandes" />
	</Container>

	<observer:listen to="{videoPlayer}" for="playing">
		<action:script>
			<![CDATA[
				
				buffer.percentWidth = videoPlayer.percentLoaded;
				
				//seekerButton.x = (videoPlayer.percentDone * (seekBackground.width-seekerButton.width+2)) / 100 - 2;
				seekerButton.percentX = videoPlayer.percentDone;

                currentTime.text = videoPlayer.currentTimeString;
                totalTime.text   = videoPlayer.totalTimeString;                                                               
				
			]]>
		</action:script>
	</observer:listen>  
	<observer:listen to="{videoPlayer}" for="loaded">
		<action:script>
			<![CDATA[
			
				
				//so the button and text resets
				videoPlayer.dispatchEvent(new Event("playing"));
				
				                                                
				
			]]>
		</action:script>
	</observer:listen>
	
	
	
</Skin>