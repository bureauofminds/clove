
<Skin xmlns:JWLoadManager="com.bridge.module.LoadManagerModule">
  
   <Variable:set name="jwSkinRoot" value="{host+'/skins/JW/'}" />
                                                       
   <!-- Load in the required font for this skin -->
  <external:asset  source="{jwSkinRoot+'WhitneyHTFSemiBold.swf'}" type="font"   				  />
  <external:asset  source="{jwSkinRoot+'style.xml'}"              type="script" />
                                                                
  <observer:addShortEvent name="mouseOver" event="mouseOver" />
  <observer:addShortEvent name="mouseOut" event="mouseOut" />
   
  <change:property target="{JWLoadManager}" pauseMethod="pauseAll" />

  <JWLoadManager:execute />   
   
     
	
	<action:script>
		<![CDATA[
		   
			function mouseIsOut(target) 
			{
				return (root.mouseX < target.x) ||
				       (root.mouseY < target.y) ||
				       (root.mouseX > target.x + target.width) ||
				       (root.mouseY > target.y + target.height)
			}
			
				         
			
		]]>
	</action:script>
	 
  
	 
	
	<Container styleName=".jwcontrols" instance:id="mediaControls" alignment="horizontal" padding="1">
	   
	   	
            
			
			<Image instance:id="playButton" source="{#JWLoadManager:media(jwSkinRoot+'ui/play.png')}" visible="{true}"  verticalCenter="0"/>  					
            <Image instance:id="pauseButton" source="{#JWLoadManager:media(jwSkinRoot+'ui/pause.png')}" visible="{false}" />  					
                                                                                              
			<observer:listen to="{playButton}" for="click">     
				<Bridge run="{videoPlayer.play()}" />
			</observer:listen>
			
			<observer:listen to="{pauseButton}" for="click">    
				<Bridge run="{videoPlayer.pause()}" />
			</observer:listen>
			
			<observer:listen to="{videoPlayer}" for="resume">
				<Bridge run="{isPlaying(true)}" />
			</observer:listen>
			
			<observer:listen to="{videoPlayer}" for="pause">
				<Bridge run="{isPlaying(false)}" />
				
			</observer:listen>
		 	
		
			<action:script>
				<![CDATA[
					function isPlaying(value:Boolean)
					{
						playButton.visible  = !value; 
						pauseButton.visible = value;
						                                               
					}
				]]>
			</action:script>
		

		<Image instance:id="stopButton" source="{#JWLoadManager:media(jwSkinRoot+'ui/stop.png')}" verticalCenter="0" />
		<Image instance:id="beginningButton" source="{#JWLoadManager:media(jwSkinRoot+'ui/beginning.png')}" verticalCenter="0" />
		<Image instance:id="endButton" source="{#JWLoadManager:media(jwSkinRoot+'ui/end.png')}" verticalCenter="0" />
		
		<Container instance:id="centerControls" styleName=".centerControls" alignment="horizontal" percentWidth="100" verticalCenter="0" height="17"> 
			<Spacer alpha="0" width="5" height="1" />
			<Label instance:id="currentTimeTxt" text="0:00" verticalCenter="1" styleName=".currentTime" />
			<Spacer alpha="0" width="5" height="1" />
			<Container instance:id="seekBackground" buttonMode="{true}" styleName=".jwseekBackground" verticalCenter="0" percentWidth="100" height="4">    
		   	
		
			
				<Container instance:id="buffer" styleName=".jwbuffer">
				    <observer:listen to="{videoPlayer}" for="progress">
							<action:script>
							<![CDATA[
						

								buffer.percentWidth = videoPlayer.percentLoaded;

								seekerDragger.bounds = getScrubArea();
					


							]]>
						</action:script>
					</observer:listen> 
				
					<observer:listen to="{buffer}" for="mouseUp">
						<action:script>
							<![CDATA[
								videoPlayer.seek((100 * seekBackground.mouseX) / (seekBackground.width));
								videoPlayer.play();
							]]>
						</action:script>
					</observer:listen> 
				
				
			
				</Container>    
			
			     
			    
				
				<Image instance:id="seekerButton" source="{#JWLoadManager:media(jwSkinRoot+'ui/scrubber.png')}" x="-2" verticalCenter="0" />  
			
				<action:script>
					<![CDATA[
						var seekerDragger:Dragger = new Dragger(seekerButton,'dragAll',false,new Rectangle(seekerButton.x,seekerButton.y,seekBackground.width,0));
						seekerDragger.boundToSize = true;
					
						seekerDragger.addEventListener('dragStart',onDragStart);
						seekerDragger.addEventListener('dragging',onSeekDrag);
						seekerDragger.addEventListener('dragStop',onDragStop);
					
					
						function onDragStart(event:Event)
						{
							seekerButton.percentWidth = NaN;
						}
					
					
						function onSeekDrag(event:Event)
						{
					
							videoPlayer.seek((100 * seekerButton.x) / (seekBackground.width));

						}
					
					
						function onDragStop(event)
						{
							videoPlayer.play();
						}
					
						var startX:Number = seekerButton.x;
						var startY:Number = seekerButton.y;
					
					
						function getScrubArea()
						{
							return new Rectangle(startX,startY,buffer.width,0);
						}
					]]>
				</action:script>
			
		
	 		</Container> 
			<Spacer alpha="0" width="5" height="1" />
	  		<Label instance:id="totalTime" text="0:00" verticalCenter="1" styleName=".currentTime" />
			<Spacer alpha="0" width="5" height="1" />
		</Container>
	   
       
	    <Image instance:id="soundButton" source="{#JWLoadManager:media(jwSkinRoot+'ui/volume100.png')}" verticalCenter="0"  buttonMode="{true}">
			<Bridge run="{var isMuted:Boolean = false; var recordedPosition:Number; var recordedVolume:Number;}" />
			<observer:listen to="{soundButton}" for="mouseOver">
				<action:script>
					<![CDATA[
					       

						var isOverVolume = true;
						
						var tween:Tween = new Tween(soundControl,"bottom",soundControl.bottom,mediaControls.height+2,1000);
						
						
						tween.easingFunction = Strong.easeOut;
						
						toggleSoundControl = !toggleSoundControl;
						
						
					]]>
				</action:script>
				
				
				
				<observer:listen to="{soundButton}" for="mouseOut">
					<Bridge run="{isOverVolume = false}" />
				</observer:listen>
			</observer:listen>
			<Image instance:id="advanced" source="{#JWLoadManager:media(jwSkinRoot+'ui/fullScreen.png')}" verticalCenter="0" buttonMode="true" observer:click="toggleFullScreen();" />   
			<action:script>
				<![CDATA[

					function toggleFullScreen()
					{

						if(stage.displayState=='fullScreen')
						{

							stage.displayState = 'normal';
						}
						else
						{
							stage.displayState='fullScreen';
						}
					}
				]]>
			</action:script>
			<observer:listen to="{soundButton}" for="click">
					<action:script>
						<![CDATA[
						
							var tween:Tween;
							
							if(isMuted)
							{
								tween = new Tween(soundControlBar,'y',soundControlBar.y,recordedPosition,500);
								videoPlayer.volume = recordedVolume;
							}
							else
							{
								recordedPosition = soundControlBar.y;
								recordedVolume = videoPlayer.volume;
								
								tween = new Tween(soundControlBar,'y',soundControlBar.y,soundControlTrack.height - soundControlBar.height,500);
								
							}
							
							soundControlBar.addEventListener("enterFrame",onTweening);
							tween.addEventListener("tweenComplete",onTweenComplete);
							
							function onTweening(event)
							{
								videoPlayer.volume = 100-(100 * soundControlBar.y) / (soundControlTrack.height-soundControlBar.height);
							}
							
							function onTweenComplete(event)
							{
								soundControlBar.removeEventListener("enterFrame",onTweening);
							}
							
							tween.easingFunction = Strong.easeOut;
						
							isMuted = !isMuted;
						
						]]>
					</action:script>
			</observer:listen>
		</Image>
		

		
		
	</Container> 
	
	
	
	

	<observer:listen to="{videoPlayer}" for="playing">
		<action:script>
			<![CDATA[                                                                                                                   
				seekerButton.percentX = videoPlayer.percentDone;
                 
			    currentTimeTxt.text   = videoPlayer.currentTimeString;                                                                                  
				
			]]>
		</action:script>
	</observer:listen>  
	<observer:listen to="{videoPlayer}" for="loaded">
		<action:script>
			<![CDATA[
			
				
				//so the button and text resets
				videoPlayer.dispatchEvent(new Event("playing"));
				
				totalTime.text  = videoPlayer.totalTimeString;                                                   
				
			]]>
		</action:script>
	</observer:listen>
	
	
</Skin>